//Ques:-=-\\
You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.
 You may assume the two numbers do not contain any leading zero, except the number 0 itself.
Example 1:
Input: l1 = [2,4,3], l2 = [5,6,4]
Output: [7,0,8]
Explanation: 342 + 465 = 807.
//

//Code:--//

#include <iostream>
using namespace std;
struct ListNode {
    int val;
    ListNode* next;
    ListNode(int x) : val(x), next(nullptr) {}
};
ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
    ListNode* dummyHead = new ListNode(0); 
    ListNode* current = dummyHead;        
    int carry = 0;                   
    while (l1 || l2 || carry) {
        int sum = carry;                  

        if (l1) {                      
            sum += l1->val;
            l1 = l1->next;
        }
        if (l2) {    
            sum += l2->val;
            l2 = l2->next;
        }

        carry = sum / 10;              
        current->next = new ListNode(sum % 10);
        current = current->next;
    }
    return dummyHead->next; 
}
ListNode* createLinkedList(const int arr[], int n) {
    if (n == 0) return nullptr;
    ListNode* head = new ListNode(arr[0]);
    ListNode* current = head;
    for (int i = 1; i < n; i++) {
        current->next = new ListNode(arr[i]);
        current = current->next;
    }
    return head;
}
void printLinkedList(ListNode* head) {
    while (head) {
        cout << head->val;
        if (head->next) cout << " -> ";
        head = head->next;
    }
    cout << endl;
}
int main() {
    int arr1[] = {2, 4, 3};
    int arr2[] = {5, 6, 4};
    int n1 = sizeof(arr1) / sizeof(arr1[0]);
    int n2 = sizeof(arr2) / sizeof(arr2[0]);
    ListNode* l1 = createLinkedList(arr1, n1);
    ListNode* l2 = createLinkedList(arr2, n2);
    cout << "Input List 1: ";
    printLinkedList(l1);
    cout << "Input List 2: ";
    printLinkedList(l2);
    ListNode* result = addTwoNumbers(l1, l2);
    cout << "Output Sum List: ";
    printLinkedList(result);
    return 0;
}

